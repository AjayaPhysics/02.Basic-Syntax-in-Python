# Python Basics: Basic Syntax

Welcome to the first chapter of your Python journey! In this section, we will learn the fundamentals of Python's syntax, the structure of its code, and some essential rules you must follow when writing Python programs.

---

## 1. Introduction to Python Syntax

Python's syntax is straightforward and easy to read, making it an excellent choice for beginners. Let's look at some basic elements of Python syntax:

### Key Points:
- Python uses **indentation** to define blocks of code instead of curly braces `{}`.
- Statements end with a **newline**, not a semicolon (`;`).
- Comments start with a **hash symbol** (`#`) and are ignored by the Python interpreter.

---

## 2. Writing Your First Python Program

Let's start with the classic "Hello, World!" program.

### Code:
```python
# This is a comment. Comments are ignored by Python.
# The following code prints "Hello, World!" to the screen.

print("Hello, World!")
```

### Explanation:
- `print()` is a built-in function in Python that outputs text to the screen.
- The text inside the quotation marks (`""`) is called a string.

---

## 3. Indentation in Python

Python uses indentation to define code blocks. Indentation is the number of spaces at the beginning of a line. Proper indentation is crucial in Python, as incorrect indentation will cause errors.

### Example:
```python
# Correct indentation:
if True:
    print("This is indented properly.")

# Incorrect indentation will throw an error:
# if True:
# print("This will cause an IndentationError.")
```

### Explanation:
- The `if` statement expects the next line to be indented to indicate a block of code.
- Typically, 4 spaces are used for indentation in Python.

---

## 4. Python Comments

Comments are used to explain code and are ignored by the Python interpreter.

### Types of Comments:
1. **Single-line comment:**
   ```python
   # This is a single-line comment.
   print("Single-line comments start with #")
   ```

2. **Multi-line comment:**
   Although Python doesn't have a specific syntax for multi-line comments, you can use triple quotes for documentation.
   ```python
   """
   This is a multi-line comment.
   It can span multiple lines.
   """
   print("Multi-line comments use triple quotes.")
   ```

---

## 5. Variables and Case Sensitivity

Python is **case-sensitive**, meaning `MyVariable` and `myvariable` are different.

### Example:
```python
myVariable = 10
MyVariable = 20

print(myVariable)  # Outputs: 10
print(MyVariable)  # Outputs: 20
```

---

## 6. Rules for Writing Python Code

1. **Use meaningful variable names:**
   ```python
   age = 25  # Good
   x = 25    # Avoid unless necessary
   ```

2. **Avoid reserved keywords:** Reserved keywords like `if`, `else`, and `for` cannot be used as variable names.
   ```python
   # Reserved keywords example:
   # if = 10  # This will cause an error.
   ```

3. **Follow the PEP 8 style guide:** This is the official style guide for Python code.

---

## Complete Example: Bringing it All Together

Here is a complete example that incorporates everything we've learned:

### Code:
```python
# This program calculates the sum of two numbers and prints the result.

# Variables to store numbers
num1 = 5
num2 = 10

# Calculate the sum
sum = num1 + num2

# Print the result
print("The sum of", num1, "and", num2, "is", sum)
```

### Output:
```
The sum of 5 and 10 is 15
```

---

## 7. Practice Exercises

1. Write a Python program to print your name and age.
2. Create a program that calculates the area of a rectangle. Use meaningful variable names for length and width.
3. Experiment with indentation errors by removing spaces before a block of code and observe the error messages.

---

### Final Notes
Congratulations! You've completed the first chapter on Python's basic syntax. Practising these fundamentals is key to mastering Python. Upload this to GitHub to showcase your work and help others learn.

---

### Repository Example Structure
For better organisation, use a folder structure like this:
```
Python-Course/
├── Chapter1-BasicSyntax/
│   ├── basic_syntax.md  # Explanation and code examples
│   ├── hello_world.py   # Your first Python program
│   ├── indentation_example.py
│   ├── variable_case_sensitivity.py
